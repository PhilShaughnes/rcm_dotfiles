# Prefix
unbind C-b
set-option -g prefix C-a
bind a send-prefix

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g status-keys vi
set -g history-limit 10000

# upgrade $TERM
# set -g default-terminal "screen-256color"
set -g default-terminal "tmux"
set -ga terminal-override ,external-terminal:Tc
# focus events enabled for terminals that support them
set -g focus-events on

setw -g monitor-activity on

unbind %
bind - split-window -v
unbind '"'
bind \ split-window -h

bind-key -r  J resize-pane -D 5
bind-key -r  K resize-pane -U 5
bind-key -r  H resize-pane -L 5
bind-key -r  L resize-pane -R 5


# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Ctrl-s to cycle (prefix is Ctrl a)
bind -n C-s select-pane -t :.+


#smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use Alt-arrow keys without prefix key to switch panes
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# cycle windows with bind tab
bind Tab next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# Configure your default shell
set -g default-shell $SHELL


# Mouse support 
set -g mouse on

# Make the current window the first window
bind T swap-window -t 1

#run-shell 'test "$(uname)" = "Darwin"' 'tmux setenv -g TMUX_COPY_CMD  '
# COPYCMD="xclip -i -f -selection primary | xclip -i -selection clipboard"
# if-shell 'test "$uname" = "Darwin"' 'COPYCMD="reattach-to-user-namespace pbcopy"'
COPYCMD="reattach-to-user-namespace pbcopy"

#if-shell "type 'reattach-to-user-namespace' >/dev/null" "set -g default-command 'reattach-to-user-namespace -l $SHELL'"
bind-key -T copy-mode-vi WheelUpPane send -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -X scroll-down

# # Vi copypaste
setw -g mode-keys vi
bind-key v copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel $COPYCMD
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel $COPYCMD \; display-message "highlighted selection copied to system clipboard"

# bind ']' to use pbbaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# bind 'Space' to go to copy mode and search backwards
bind / run "tmux copy-mode; tmux send-keys ?"


# bind-key c = new window
# bind-key d = detach session
# bind-key D = choose detach

# tmux attach -t [session name]
# tmux ls = list sessions
# tmux new -s [new session name]
# tmux rename-session -t [old name] [new name]

#bind-key ? = all commands

######################
### DESIGN CHANGES ###
######################
# we usually want to use one of three colors:
# 1) a BRIGHTS color
BRIGHTS=cyan
# 2) a DIMZ color
DIMZ=colour241
# 3) a background color
# default should just use the terminal background color
BACKGROUND=default

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style fg=colour196,bg=colour238,bold

# }
# The panes {

set -g pane-border-style fg=$DIMZ,bg=default
set -g pane-active-border-style fg=$BRIGHTS,bg=default

# }
# The statusbar {

# set -g status-interval 1
set -g status-position bottom
set -g status-style fg=$DIMZ,bg=default,$DIM
# set -g status-left "#S"
#set -g status-left "#[fg=blue]#S #[fg=magenta]‚ùØ "
set -g status-left "#[fg=blue]#S #[fg=magenta]<> "
set -g status-right '#[fg=default,bg=default] #(whoami)@#H #[fg=magenta]<#(cat ~/.thyme-tmux)#[fg=magenta]> #[fg=default,bg=default,bold]%l:%M %p '
set -g status-justify left          # center window list for clarity
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=$BRIGHTS,bg=default,bold
setw -g window-status-current-format ' #(echo "#{pane_current_command}") '

setw -g window-status-style fg=$DIMZ,bg=default,none
setw -g window-status-format         ' #(echo "#{pane_current_command}") '

setw -g window-status-bell-style fg=colour255,bg=colour1,bold

# }
# The messages {

set -g message-style fg=black,bg=$BRIGHTS,none

# }

# Plugins {

# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-copycat'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm'

#}
