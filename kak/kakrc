# space is my leader
map global normal <space> , -docstring 'leader'
map global normal <backspace> <space> -docstring 'remove all sels except main'
map global normal <a-backspace> <a-space> -docstring 'remove main sel'
map global normal , <space> -docstring 'clear multicursor'

# jj is escape
hook global InsertChar j %{ try %{
  exec -draft hH <a-k>jj<ret> d
  exec <esc>
}}

set global tabstop 2
set global indentwidth 2

#indent with spaces on tab
#map global insert <tab> '<a-;><gt>'
#map global insert <s-tab> '<a-;><lt>'
hook global InsertChar \t %{
    exec -draft -itersel h@
}

map global insert <backspace> ⌫
hook global InsertChar ⌫ %{ try %{
    execute-keys <backspace>
    try %{
        execute-keys -draft hGh <a-k>\A\h+\z<ret> <lt>
    } catch %{
        execute-keys <backspace>
    }
} }

# use tab for completions as well
hook global InsertCompletionShow .* %{
    try %{
        # this command temporarily removes cursors preceded by whitespace;
        # if there are no cursors left, it raises an error, does not
        # continue to execute the mapping commands, and the error is eaten
        # by the `try` command so no warning appears.
        execute-keys -draft 'h<a-K>\h<ret>'
        map window insert <tab> <c-n>
        map window insert <s-tab> <c-p>
    }
}
hook global InsertCompletionHide .* %{
    unmap window insert <tab> <c-n>
    unmap window insert <s-tab> <c-p>
}

# select all occurrences in this buffer
map global user a '*%s<c-/><ret>' -docstring 'select all'

alias global vsp tmux-new-vertical
alias global sp tmux-new-horizontal

def edit-config -command-completion -docstring "Edit config file kakrc" %{
  e ~/.config/kak/kakrc
}
alias global ec edit-config

hook global WinDisplay .* list-buffers

# buffers
map global user b ':enter-buffers-mode<ret>'              -docstring 'buffers…'
map global user B ':enter-user-mode -lock buffers<ret>'   -docstring 'buffers (lock)…'

alias global bd delete-buffer
alias global bf buffer-first
alias global bl buffer-last
alias global bo buffer-only
alias global bo! buffer-only-force

# phantom selection
map global normal f     ":phantom-sel-add-selection<ret>"
map global normal F     ":phantom-sel-select-all; phantom-sel-clear<ret>"
map global normal <a-f> ":phantom-sel-iterate-next<ret>"
map global normal <a-F> ":phantom-sel-iterate-prev<ret>"


map global user / :comment-line<ret> -docstring 'comment-line'

def -docstring 'invoke fzf to open a file' \
  fzf-file %{ %sh{
    if [ -z "$TMUX" ]; then
      echo echo only works inside tmux
    else
      FILE=$(find * -type f | fzf-tmux -d 15)
      if [ -n "$FILE" ]; then
        printf 'eval -client %%{%s} edit %%{%s}\n' "${kak_client}" "${FILE}" | kak -p "${kak_session}"
      fi
    fi
} }

def -docstring 'invoke fzf to search with rg' \
  fzf-ag %{ %sh{
    if [ -z "$TMUX" ]; then
      echo echo only works inside tmux
    else
      FILE=$(rg -S . | fzf-tmux -d 15)
      if [ -n "$FILE" ]; then
        printf 'eval -client %%{%s} edit %%{%s}\n' "${kak_client}" "${FILE}" | kak -p "${kak_session}"
      fi
    fi
} }

def -docstring 'invoke fzf to search for project files' \
  fzf-git %{ %sh{
    if [ -z "$TMUX" ]; then
      echo echo only works inside tmux
    else
      FILE=$(rg . -l -S | fzf-tmux -d 15)
      if [ -n "$FILE" ]; then
        printf 'eval -client %%{%s} edit %%{%s}\n' "${kak_client}" "${FILE}" | kak -p "${kak_session}"
      fi
    fi
} }

def -docstring 'invoke fzf to select a buffer' \
  fzf-buffer %{ %sh{
    if [ -z "$TMUX" ]; then
      echo echo only works inside tmux
    else
      BUFFER=$(printf %s\\n "${kak_buflist}" | tr : '\n' | fzf-tmux -d 15)
      if [ -n "$BUFFER" ]; then
        echo "eval -client '$kak_client' 'buffer ${BUFFER}'" | kak -p ${kak_session}
      fi
    fi
} }

map global user t :fzf-file<ret> -docstring 'invoke fzf to open a file'
map global user g :fzf-git<ret> -docstring 'file search'
map global user f :fzf-ag<ret> -docstring 'full project search'
map global user B :fzf-buffer<ret> -docstring 'search buffers'

define-command ide %{
    rename-client main
    set-option global jumpclient main

    new rename-client tools
    set-option global toolsclient tools

    new rename-client docs
    set-option global docsclient docs
}

colorscheme desertex
set-face global Whitespace rgb:3a3a3a,default

# Show line numbers
addhl global number_lines -hlcursor -separator ' '
#addhl global show_whitespaces
addhl global show_matching

set-option global ui_options ncurses_assistant=none
%sh{kak-lsp --kakoune}
